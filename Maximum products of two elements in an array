class Solution {  //optimised solution O(N)
    public int maxProduct(int[] nums) {
        int largest = 0;
        int second_Largest = 0;
        for(int currentnum:nums){
            if(currentnum>largest){
                second_Largest = largest;
                largest = currentnum;
            }
            else{
                second_Largest = Math.max(second_Largest,currentnum);
            }
        }
        return (largest-1) * (second_Largest-1);
    }
}


//brute force O(N^2)

int max = 0;
for(int i = 0 ; i < n ; i ++){
  for(int j = i + 1; j < n; j++){
    max = Math.max(max,(arr[i]-1)*(arr[j]-1));
  }
}
return max;
